#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 10
#define NotFound 0
typedef int ElementType;

typedef int Position;
typedef struct LNode *List;
struct LNode {
    ElementType Data[MAXSIZE];
    Position Last; /* 保存线性表中最后一个元素的位置 */
};

List ReadInput(); /* 裁判实现，细节不表。元素从下标1开始存储 */
Position BinarySearch( List L, ElementType X );

int main()
{
    List L;
    ElementType X;
    Position P;

    L = ReadInput();
    scanf("%d", &X);
    P = BinarySearch( L, X );
    printf("%d\n", P);

    return 0;
}

/* 你的代码将被嵌在这里 */



Position BinarySearch( List L, ElementType X ){
  
  if(L==NULL){                  //表为空，返回0
		return 0;
  }
  
  int right=L->Last;
  int left=1;
  int mid;   //mid为left和right中点
  
  while(left <= right)
  {              //如果left>right就没办法形成闭区间
    mid = (left + right) / 2;    //取中点
    
    if(L->Data[mid]==X){             //找到目标，返回下标
      return mid;
    }
    else if(L->Data[mid]>X){           //中间数大于K
     right = mid - 1;                  //往左子区间[left,mid - 1]查找
    }
    else{                                //中间的数小于K
     left = mid + 1;                    //往右子区间[mid + 1,right]查找
    }
    
  }
  return NotFound;                            //没有找到，返回NotFound
}
